@model  StudyBuddy.Models.AddCourseViewModel

@{
    ViewBag.Title = "Add Courses";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Scripts {
    <script>
        $(document).ready(function () {
            var options = {
                source: function (request, response) {
                    $.ajax({
                        url: "@Url.Action("GetCourseByCriteriaAndGuid", "Home")",
                        type: "GET",
                        dataType: "json",
                        data: { criteria: request.term },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return { label: item.Courses, value: item.Courses };
                            }))
                        }
                    })
                },
                messages: {
                    noResults: "", results: function (resultsCount) { }
                }
            };
            $("#Courses").autocomplete(options);

            var maxField = 10; //Input fields increment limitation
            var addButton = $('.add_button'); //Add button selector
            var wrapper = $('#fillin'); //Input field wrapper
            var x = 1;

            $(addButton).click(function () { //Once add button is clicked
                if (x < maxField) { //Check maximum number of input fields
                    var fieldHTML = $('<input class="element1 form-control mg-t-10 ui-autocomplete-input" id="Courses' + x + '" name="Courses" onchange="FillSection(\'Courses' + x + '\', \'Sections' + x + '\')" placeholder="Enter course name" type="text" value="" autocomplete="off"><select class="element2  form-control mg-t-10" id="Sections' + x + '" name="Sections"><option value="">Select section</option></select><hr class="element3"/>');
                    x++; //Increment field counter
                    $(wrapper).append(fieldHTML); // Add field html
                    fieldHTML.autocomplete(options);
                }
            });

            $(".remove_button").on("click", function () {
                $(".element1").last().remove(); // Remove the last group.
                $(".element2").last().remove(); // Remove the last group.
                $(".element3").last().remove(); // Remove the last group.
            });
        });

        function FillSection(course, section) {
            var sectionId = $("#" + course).val();
            $.ajax({
                url: '@Url.Action("FillSection", "Home")',
                type: "GET",
                dataType: "JSON",
                data: { section: sectionId },
                success: function (sections) {
                    $("#" + section).html(""); // clear before appending new list
                    $.each(sections, function (i, sections) {
                        $("#" + section).append(
                            $('<option></option>').val(sections).html(sections));
                    });
                }
            });
        }
    </script>
}
<div class="sh-breadcrumb">
    <nav class="breadcrumb">
        <a class="breadcrumb-item" href="@Url.Action("Index", "Home")">StudyBuddy</a>
        <span class="breadcrumb-item active">Add courses</span>
    </nav>
</div><!-- sh-breadcrumb -->
<div class="sh-pagetitle">
    <div class="input-group">
    </div><!-- input-group -->
    <div class="sh-pagetitle-left">
        <div class="sh-pagetitle-icon"><i class="icon ion-plus"></i></div>
        <div class="sh-pagetitle-title">
            <span>Add the courses you would like here</span>
            <h2>@ViewBag.Title</h2>
        </div><!-- sh-pagetitle-left-title -->
    </div><!-- sh-pagetitle-left -->
</div><!-- sh-pagetitle -->

@using (Html.BeginForm("Add", "Home", FormMethod.Post))
{
    <div class="sh-pagebody">
        <div class="row row-sm">
            <div class="col-12">
                <div class="card bd-primary">
                    <div class="card-header bg-primary tx-white">
                        Add courses
                    </div>
                    <div class="card-body">
                        <div class="form-group row align-items-center justify-content-center">
                            <div class="col-sm-2" id="fillin">
                                @Html.TextBoxFor(model => model.Courses, new { @class = "form-control mg-t-10", @placeholder = "Enter course name", @type = "text", @name = "firstname", @onchange = "FillSection('Courses', 'Sections')" })
                                @Html.ValidationMessageFor(model => model.Courses, "", new { @class = "text-danger" })
                                @Html.DropDownListFor(model => model.Sections, new SelectList(Enumerable.Empty<SelectListItem>(), "SectionId", "Sections"), "Select section", new { @class = "form-control mg-t-10" })
                                @Html.ValidationMessageFor(model => model.Sections, "", new { @class = "text-danger" })
                                <hr />
                            </div>
                        </div>
                    </div>
                    <div class="card-footer rounded-0 bg-gray-300 d-flex justify-content-between">
                        <button type="submit" class="btn btn-success">Finish</button>
                        <button type="button" class="remove_button btn btn-danger">Remove</button>
                        <button type="button" class="add_button btn btn-warning">Add</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}